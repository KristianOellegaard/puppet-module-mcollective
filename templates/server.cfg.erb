# Basic stuff
topicprefix = <%= scope.lookupvar("mcollective::server::mc_topicprefix") %>
libdir      = <%= scope.lookupvar("mcollective::server::mc_libdir") %>
logfile     = <%= scope.lookupvar("mcollective::server::mc_logfile") %>
loglevel    = <%= scope.lookupvar("mcollective::server::mc_loglevel") %>
daemonize   = <%= scope.lookupvar("mcollective::server::mc_daemonize") %>

# Plugins
securityprovider = <%= scope.lookupvar("mcollective::server::mc_security_provider") %>
<% case scope.lookupvar("mcollective::server::mc_security_provider") -%>
<% when "psk" -%>
plugin.psk = <%= scope.lookupvar("mcollective::server::mc_security_psk") %>
<% when "ssl" -%>
plugin.ssl_server_private = <%= scope.lookupvar("mcollective::server::server_ssl_server_private") %>
plugin.ssl_server_public = <%= scope.lookupvar("mcollective::server::server_ssl_server_public") %>
plugin.ssl_client_cert_dir = <%= scope.lookupvar("mcollective::server::server_ssl_client_cert_dir") %>
<% end -%>

# Registration
registerinterval = 300
registration = Meta

# Middleware
connector = stomp
plugin.stomp.pool.size      = 1
plugin.stomp.pool.host1     = <%= scope.lookupvar("mcollective::server::stomp_server") %>
plugin.stomp.pool.port1     = <%= scope.lookupvar("mcollective::server::stomp_port") %>
plugin.stomp.pool.user1     = <%= scope.lookupvar("mcollective::server::stomp_user") %>
plugin.stomp.pool.password1 = <%= scope.lookupvar("mcollective::server::stomp_passwd") %>
plugin.stomp.pool.ssl1      = <%= scope.lookupvar("mcollective::server::stomp_ssl") ? "true" : "false" %>

# NRPE
plugin.nrpe.conf_dir  = <%= scope.lookupvar("mcollective::server::nrpe_dir") %>

# Facts
factsource = <%= scope.lookupvar("mcollective::server::fact_source") %>
<% if scope.lookupvar("mcollective::server::fact_source") == 'yaml' -%>
plugin.yaml = <%= scope.lookupvar("mcollective::server::yaml_facter_source") %>
<% end -%>

# ActionPolicy
rpcauthorization = 1
rpcauthprovider = action_policy
plugin.actionpolicy.allow_unconfigured = 0
plugin.actoinpolicy.enable_default = 1
plugin.actionpolicy.default_name = default
